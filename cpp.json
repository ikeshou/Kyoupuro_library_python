{
	// Place your snippets for cpp here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"AC_snippets": {
		"prefix": "kyoupuro",
		"body": [
			"#include <bits/stdc++.h>",
			"",
			"using namespace std;",
			"/* types */",
			"using i32 = int32_t; using ui32 = uint32_t; using i64 = int64_t; using ui64 = uint64_t;",
			"using f32 = float;   using f64  = double;",
			"using PLL = pair<i64, i64>;",
			"using PDD = pair<f64, f64>;",
			"using VI  = vector<i64>;",
			"using VVI = vector<VI>;",
			"using VB  = vector<bool>;",
			"using VS  = vector<string>;",
			"using VPL = vector<PLL>;",
			"using VPD = vector<PDD>;",
			"/* constants */",
			"constexpr i64 mod = 1000000007;                                // 10^9+7",
			"constexpr i64 inf = 1000000000000;                             // 10^12",
			"/* macros */",
			"#define PB            push_back",
			"#define PF            push_front",
			"#define F             first",
			"#define S             second",
			"#define MP            make_pair",
			"#define MAX(c)        *max_element(ALL(c))",
			"#define MIN(c)        *min_element(ALL(c))",
			"#define SIZE(c)       (i64)((c).size())                        // unsined int -> int64_t",
			"#define ALL(c)        (c).begin(), (c).end()                   // for arguments",
			"#define REV(c)        reverse(ALL(c))",
			"#define SORT(c)       stable_sort(ALL(c))",
			"#define RSORT(c)      stable_sort((c).rbegin(), (c).rend())",
			"#define FOR(i, a, b)  for (i64 i=(a); i<=(b); ++i)             // a to b (up)",
			"#define FORD(i, a, b) for (i64 i=(a); i>=(b); --i)             // a to b (down)",
			"#define REP(i, n)     for (i64 i=0; i<(i64)(n); ++i)           // 0 to n-1",
			"#define REPD(i, n)    for (i64 i=(i64)(n)-1; i>=0; --i)        // n-1 to 0",
			"",
			"",
			"void Main() {",
				"\t${1:/* code */}",
				"",
			"}",
			"",
			"signed main() {",
				"\tcin.tie(nullptr);                                         // cin と cout の tie を切り高速化",
				"\tcout << fixed << setprecision(15);                        // 浮動小数点数が 1e-006 のように表示されることを防ぐ",
				"\tMain();",
			"}"
		],
		"description": "C++ template for programming competition"
	},
	"cout_completion": {
		"prefix": "co",
		"body": [
			"cout << ${1:/* code */} << \"\\n\";"
		],
		"description": "typical std::cout completion"
	},

}